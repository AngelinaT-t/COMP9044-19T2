#!/bin/sh
#written by Wanze Liu z5137189


legitdir='.legit'
sub_legitdir='.git'
fullpath="$legitdir/$sub_legitdir"
indexdir="objects"
# Subset 0
# Function 2 commit
# Saves a copy of all files in the index to the repository


# function 1 
# add file to the index directory
add()
{
    if  test "$#" -eq 0
    then
        echo "Maybe you wanted to say 'git add .'?"
        exit 1
    fi
    if test -e  $legitdir
    then
        if !( test -e "$fullpath/$indexdir" )
        then
            mkdir "$fullpath/$indexdir"
        fi
        # traverse the file that need to add 
        for file in $@
        do  
            #if the name of the file is not vlaid
            if ( (echo "$file" | egrep -v '[_a-zA-Z0-9\.\-]') || (echo "$file" | egrep -v '^[a-zA-Z0-9]') ) >/dev/null
            then
                echo "legit-add: error: invalid filename '$file'"
                exit 1
            fi
            #if file not exist in the current directory
            if !( test -e "$file" )
            then
                #if file exist in the object directory and not exist in the current directory,remove the file from objects directory
                if (test -e "$fullpath/$indexdir/$file")
                then
                    rm $fullpath/$indexdir/$file
                    exit 1
                fi
                echo "legit-add: error: can not open '$file'"
                if ( test -e "$fullpath/$indexdir/$file")
                then 
                    rm "$fullpath/$indexdir/$file"
                fi
                continue
            else 
                cp "$file" "$fullpath/$indexdir"
            fi
        done
    else
        echo  "legit-add: error: no $legitdir directory containing legit repository exists"
        exit 1
    fi
}


# function 2
# retrun the last commit number in git directory
commitseq()
{
    count=0
    while ( test $count -ge 0 )
    do
        if [ -d "$fullpath/.commit_$count" ]
        then
            count=$(( count+1 ))
        else
            return $count
        fi
    done
}



# function 3
# compare two file 

file_compare()
{   
    filename=".commit_$1"
    dir="$fullpath/$filename"
    #iterate the diractory to find differnt file 
    for f in `ls ${dir}` 
        do  
            index_file="$fullpath/$indexdir/$f"
            if [ ! -f $index_file ]
            then
                return 1
            else
                diff "$index_file" "$dir/$f" >/dev/null
                if [ $? != 0 ]
                then
                    return 1
                else
                    continue
                fi 
            fi 
        done

    #reverse iterate to find different file
    for ff in `ls "$fullpath/$indexdir/"`
    do
        obiect_dir="$dir/$ff"
        if [ ! -f $obiect_dir ]
        then
            return 1
        else
            diff "$dir/$ff" "$obiect_dir" >/dev/null  
            if [ $? != 0 ]
            then
                return 1
            else
              continue
            fi
        fi    
    done 
}

# function 4
# commit to the resporitory
# format store all the commit file in the directory name ".commit_$num"

commit()
{
    if [ ! -d $fullpath ]
    then 
        echo "legit-commit: error: no .legit directory containing legit repository exists"
        exit 1
    fi
    # [-a] option Tell the command to automatically stage files that have been modified and deleted, 
    # but new files you have not told legit about are not affected.so only iterator the index dir 
    buff=0
    if ((test $# -ge 3) && (echo "$1" | egrep "\-a") && (echo "$2" | egrep "\-m")) >/dev/null 
       then
           for i in `ls $fullpath/$indexdir`
               do 
                   add $i
               done
            buff=1 
    fi
    # intial the fisrt commit 
    if ( ( test $# -ge 2 ) && ( echo "$1" | egrep "\-m" ) ||  ( buff=1)) >/dev/null
    then
        commitseq 
        last_num="$?" 
        commitdir="$fullpath/.commit_$last_num"
        currentbranch=`cat $fullpath/HEAD`
        # if there is no commit ,inital with .commit_0
        if ( [ ! -d $fullpath/.commit_0 ] && [ "`ls $fullpath/$indexdir`" != "" ]) 
        then
            mkdir $fullpath/.commit_0
            echo "$@" | sed "s/-m //" > "$fullpath/.commit_$last_num/.commit_message"
            cp $fullpath/$indexdir/* $commitdir >/dev/null  2>&1
            echo "COMMIT:$last_num" >> $fullpath/Branch.master
            echo "Committed as commit $last_num"
            exit 0
        fi

        # caculate the latest commit number where in resporitory
        pre_seq=$((last_num-1))
        if ( test $pre_seq -eq -1 )
        then 
            echo "nothing to commit"
            exit 1
        fi
        file_compare $pre_seq
        flag=$?

        # commit with the latest number
        if ( test  $flag -eq 1 )
        then
            mkdir $commitdir
            echo "$@" | sed "s/-m //" > "$fullpath/.commit_$last_num/.commit_message"
            cp $fullpath/$indexdir/* $commitdir >/dev/null  2>&1
            echo "COMMIT:$last_num" >> $fullpath/Branch.$currentbranch
            echo "Committed as commit $last_num"
        else
            echo "nothing to commit"
        fi
    else
        echo "usage: legit-commit [-a] -m commit-message"
        exit 1
    fi
}

commit $@


